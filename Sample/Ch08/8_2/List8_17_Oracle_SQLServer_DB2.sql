--Oracle�ADB2�ASQL Server�APostgreSQL
SELECT CASE WHEN GROUPING(shohin_bunrui) = 1
            THEN '商品分類　合計'
            ELSE shohin_bunrui END AS shohin_bunrui,
       CASE WHEN GROUPING(torokubi) = 1
            THEN '登録日　合計'
            ELSE CAST(torokubi AS VARCHAR(16)) END AS torokubi,
       SUM(hanbai_tanka) AS sum_tanka
  FROM Shohin
 GROUP BY CUBE(shohin_bunrui, torokubi);
 /*

shohin_bunrui  |   torokubi   | sum_tanka 
----------------+--------------+-----------
 商品分類　合計 | 登録日　合計 |     16780 -- すべての商品・すべての登録日の合計（全体の総合計）
 衣服           |              |      4000 -- 衣服の商品すべての合計（登録日は考慮しない）
 キッチン用品   | 2009-01-15   |      6800 --キッチン用品のうち、「2009-01-15」に登録された商品の合計
 衣服           | 2009-09-20   |      1000 --衣服のうち、「2009-09-20」に登録された商品の合計
 キッチン用品   | 2008-04-28   |       880 	--キッチン用品のうち、「2008-04-28」に登録された商品の合計
 事務用品       | 2009-11-11   |       100 --事務用品のうち、「2009-11-11」に登録された商品の合計
 事務用品       | 2009-09-11   |       500 --事務用品のうち、「2009-09-11」に登録された商品の合計
 キッチン用品   | 2009-09-20   |      3500 --キッチン用品のうち、「2009-09-20」に登録された商品の合計
 キッチン用品   | 登録日　合計 |     11180 --キッチン用品のすべての登録日の合計（キッチン用品の小計）
 衣服           | 登録日　合計 |      5000 --衣服のすべての登録日の合計（衣服の小計）
 事務用品       | 登録日　合計 |       600 --事務用品のすべての登録日の合計（事務用品の小計）
 商品分類　合計 |              |      4000 --すべての商品分類のうち、登録日が指定されていないデータの合計
 商品分類　合計 | 2009-11-11   |       100 --すべての商品分類のうち、「2009-11-11」の合計（登録日ごとの合計）
 商品分類　合計 | 2009-09-20   |      4500 --すべての商品分類のうち、「2009-09-20」の合計（登録日ごとの合計）
 商品分類　合計 | 2009-09-11   |       500 --すべての商品分類のうち、「2009-09-11」の合計（登録日ごとの合計）
 商品分類　合計 | 2009-01-15   |      6800 --すべての商品分類のうち、「2009-01-15」の合計（登録日ごとの合計）
 商品分類　合計 | 2008-04-28   |       880 --	すべての商品分類のうち、「2008-04-28」の合計（登録日ごとの合計）
(17 rows)

✅ CUBE は、指定したカラムの「全パターンの組み合わせ」**で集計を作る！
✅ つまり、「商品分類 × 登録日」の各組み合わせだけでなく、

「商品分類ごとの小計」
「登録日ごとの小計」
「全体の合計」
まで計算される！

*/


 SELECT CASE WHEN GROUPING(shohin_bunrui) = 1
            THEN '商品分類 合計'
            ELSE shohin_bunrui END AS shohin_bunrui,
       CASE WHEN GROUPING(torokubi) = 1
            THEN '登録日 合計'
            ELSE CAST(torokubi AS VARCHAR(16)) END AS torokubi,
       SUM(hanbai_tanka) AS sum_tanka
  FROM Shohin
 GROUP BY ROLLUP(shohin_bunrui, torokubi);

/*
shohin_bunrui |  torokubi   | sum_tanka 
---------------+-------------+-----------
 商品分類 合計 | 登録日 合計 |     16780
 衣服          |             |      4000
 キッチン用品  | 2009-01-15  |      6800
 衣服          | 2009-09-20  |      1000
 キッチン用品  | 2008-04-28  |       880
 事務用品      | 2009-11-11  |       100
 事務用品      | 2009-09-11  |       500
 キッチン用品  | 2009-09-20  |      3500
 キッチン用品  | 登録日 合計 |     11180
 衣服          | 登録日 合計 |      5000
 事務用品      | 登録日 合計 |       600
(11 rows)




ポイント	内容
CUBE は ROLLUP よりも多くの集計を計算！	「商品分類ごとの小計」＋「登録日ごとの小計」＋「全体の合計」
GROUPING() を使って「集計レベル」を判別！	「通常データ・小計・総合計」を明示するために活用！
CUBE の結果は ROLLUP より行数が増える！	全パターンの組み合わせを集計するため！
✅ データ分析で「登録日ごとの売上合計」も必要な場合は CUBE を使う！
✅ 商品分類ごとの小計だけで良いなら ROLLUP のほうがデータ量が少なくて済む！